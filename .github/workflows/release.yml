name: mobian cutie rootfs-builder

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: "59 23 * * *"

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: true
      matrix:
        device: [pinephone]
        environment: [phosh]
        suite: [bookworm]
        include:
          - device: pinephone
            arch: arm64
            family: sunxi

    name: ${{ matrix.config.job_name }}

    steps:
      - name: Get current date
        run: echo "current_date=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Set suffix
        run: echo "release_suffix=_${{ env.current_date }}" >> $GITHUB_ENV

      - name: Set nightly version
        if: startsWith(github.ref, 'refs/tags/mobian') != true
        run: echo "MOBIAN_VERSION=nightly" >> $GITHUB_ENV

      - name: Set version
        if: startsWith(github.ref, 'refs/tags/mobian') == true
        run: echo "MOBIAN_VERSION=$(echo ${{ github.ref }} | rev | cut -d'/' -f1 | rev)" >> $GITHUB_ENV

      - name: Set identifier
        run: echo "MOBIAN_IDENTIFIER=mobian-${{ matrix.suite }}-${{ matrix.environment }}-${{ matrix.device }}-${{ matrix.arch }}-${{ matrix.family }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: 'true'
          submodules: 'recursive'

      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: QEMU set-up
        uses: docker/setup-qemu-action@v1

      - name: Create build dir
        run: mkdir -p /tmp/buildd-results

      - name: Pull container
        run: docker pull registry.salsa.debian.org/mobian-team/docker-images/mobian-image-ci-amd64:latest

      - name: Start Container
        run: echo CONTAINER_HASH=$(docker run --detach --privileged -v /tmp/buildd-results:/buildd/out -v /dev:/host-dev -v /sys/fs/cgroup:/sys/fs/cgroup -v ${PWD}:/buildd/sources --security-opt seccomp:unconfined registry.salsa.debian.org/mobian-team/docker-images/mobian-image-ci-amd64:latest /sbin/init) >> $GITHUB_ENV

      - name: Build rootfs
        run: |
          docker exec $CONTAINER_HASH /bin/sh -c 'cd /buildd/sources; debos --disable-fakemachine -t architecture:${{ matrix.arch }} -t environment:${{ matrix.environment }} t nonfree:"true" -t debian_suite:"bookworm" -t suite:"mobian-bookworm" -t rootfs:${MOBIAN_IDENTIFIER}.tar.gz -t image:${MOBIAN_IDENTIFIER} rootfs.yaml'
          docker exec $CONTAINER_HASH /bin/sh -c 'cd /buildd/sources; debos --disable-fakemachine -t architecture:${{ matrix.arch }} -t environment:${{ matrix.environment }} t nonfree:"true" -t debian_suite:"bookworm" -t suite:"mobian-bookworm" -t rootfs:${MOBIAN_IDENTIFIER}.tar.gz -t image:${MOBIAN_IDENTIFIER} rootfs-device.yaml'
          docker exec $CONTAINER_HASH /bin/sh -c 'cd /buildd/sources; debos --disable-fakemachine -t architecture:${{ matrix.arch }} -t environment:${{ matrix.environment }} t nonfree:"true" -t debian_suite:"bookworm" -t suite:"mobian-bookworm" -t rootfs:${MOBIAN_IDENTIFIER}.tar.gz -t image:${MOBIAN_IDENTIFIER} image.yaml'

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${MOBIAN_IDENTIFIER}
          path: ./*.img
          if-no-files-found: error
          retention-days: 1

  prepare:
    runs-on: ubuntu-20.04
    name: Create GitHub release
    needs: build
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}${{ steps.create_nightly.outputs.upload_url }}

    steps:
      - name: Delete old nightly release
        uses: dev-drprasad/delete-tag-and-release@v0.1.3
        with:
          delete_release: true # default: false
          tag_name: nightly # tag name to delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag snapshot
        if: startsWith(github.ref, 'refs/tags/droidian') != true
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: mobian-out

      - name: Create SHA256SUMS
        run: |
          cd mobian-out
          for x in mobian-*; do
            cd x
            sha256sum * >> ../SHA256SUMS
            cd ..
          done

      - name: Create nightly release
        id: create_nightly
        uses: softprops/action-gh-release@v1
        with:
          files: mobian-out/SHA256SUMS
          tag_name: nightly
          draft: false
          prerelease: true

  publish:
    runs-on: ubuntu-20.04
    needs: [build, prepare]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}${{ steps.create_nightly.outputs.upload_url }}

    strategy:
      fail-fast: false
      matrix:
        device: [pinephone]
        environment: [cutie]
        suite: [bookworm]
        include:
          - device: pinephone
            arch: arm64
            family: sunxi

    name: Publish

    steps:
      - name: Set identifier
        run: echo "MOBIAN_IDENTIFIER=mobian-${{ matrix.suite }}-${{ matrix.environment }}-${{ matrix.device }}-${{ matrix.arch }}-${{ matrix.family }}" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${MOBIAN_IDENTIFIER}
          path: mobian-out

      - name: Create nightly release
        id: create_nightly
        uses: softprops/action-gh-release@v1
        with:
          files: mobian-out/*
          tag_name: nightly
          draft: false
          prerelease: true
